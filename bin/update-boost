#! /bin/bash
if [ -z "$ACMACSD_ROOT" ]; then
    echo ACMACSD_ROOT not set >&2
    exit 1
fi

failed()
{
    echo "FAILED" >&2
    exit 1
}

trap failed ERR

SRC_DIR="$ACMACSD_ROOT/sources"
PACKAGE_DIR="$SRC_DIR/boost"
SUBMODULES=(algorithm any array assert bind concept_check config container core date_time detail filesystem "function" function_types functional fusion integer io iterator lexical_cast locale math move mpl numeric optional predef preprocessor program_options range regex smart_ptr spirit static_assert system tokenizer throw_exception type_index type_traits typeof tti utility variant)
INCLUDE="$ACMACSD_ROOT/include/boost"

if [ -d "$PACKAGE_DIR" ]; then
    cd "$PACKAGE_DIR"
    git pull
else
    git clone https://github.com/boostorg/boost.git "$PACKAGE_DIR"
fi
cd "$PACKAGE_DIR"
for sub in "${SUBMODULES[@]}"; do
    git submodule update --init "libs/$sub"
done
if [ ! -d "$INCLUDE" ]; then
    mkdir "$INCLUDE"
fi
cd "$INCLUDE"
for sub in "${SUBMODULES[@]}"; do
    # "cp -as" can be perhaps used instead of the below but it is not available on macOS
    for srcdir in $(find "$SRC_DIR/boost/libs/$sub" -name boost -type d | grep include/boost); do # $SRC_DIR/boost/libs/$sub may contain sub-projects
        for dirname in $(cd "$srcdir"; find . -type d -not -name .); do
            if [ ! -d "$dirname" ]; then
                mkdir "$dirname"
            fi
        done
        for filename in $(cd "$srcdir"; find . -type f | cut -c 3-); do
            ln -sf "$srcdir/$filename" "$filename"
        done
    done
done

cd "$PACKAGE_DIR"
git submodule update --init tools/build
git submodule update --init tools/inspect
./bootstrap.sh --with-libraries=date_time,filesystem,program_options
./b2 cxxflags="-std=c++14 -DBOOST_NO_CXX11_SCOPED_ENUMS"
for filename in $(cd "$SRC_DIR"/boost/stage/lib; find . -type f | cut -c 3-); do
    ln -sf "$SRC_DIR/boost/stage/lib/$filename" "$ACMACSD_ROOT/lib/$filename"
done
if [ "$(uname)" == "Linux" ]; then
    cd "$ACMACSD_ROOT/lib"
    rm -f *.a
    for libf in libboost*.so.*; do
        ln -sf "$libf" "${libf%%.*}.so"
    done
fi
